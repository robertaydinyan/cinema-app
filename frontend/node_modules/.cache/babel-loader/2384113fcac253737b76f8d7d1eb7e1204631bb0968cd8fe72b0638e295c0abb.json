{"ast":null,"code":"var _jsxFileName = \"/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Book/SelectSeat/SelectSeat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport seatService from '../../../services/seatService';\nimport { styles } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectSeat = ({\n  timeSlot,\n  prevStep,\n  setSeat\n}) => {\n  _s();\n  const [seats, setSeats] = useState([]);\n  const [selectedSeat, setSelectedSeat] = useState(null);\n  useEffect(() => {\n    if (timeSlot) {\n      fetchSeats(timeSlot);\n    }\n  }, [timeSlot]);\n  const fetchSeats = async timeSlot => {\n    try {\n      const seatsData = await seatService.getAvailableSeats(timeSlot.room.id, timeSlot.id);\n      setSeats(seatsData);\n    } catch (error) {\n      console.error('Error fetching seats:', error);\n      setSeats([]);\n    }\n  };\n  const handleSeatClick = async seat => {\n    if (!seat.isBooked) {\n      try {\n        await seatService.bookSeat(seat.id);\n        setSelectedSeat(seat);\n        setSeat(seat);\n        // Update seat booking status in UI\n        setSeats(seats.map(s => s.id === seat.id ? {\n          ...s,\n          isBooked: true\n        } : s));\n      } catch (error) {\n        console.error('Error booking seat:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Select a Seat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), seats.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.noSeatsMessage,\n      children: \"No available seat was found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.seatGrid,\n      children: seats.map(seat => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...styles.seatItem,\n          backgroundColor: seat.isBooked ? 'red' : 'green',\n          borderColor: (selectedSeat === null || selectedSeat === void 0 ? void 0 : selectedSeat.id) === seat.id ? 'blue' : 'transparent'\n        },\n        onClick: () => handleSeatClick(seat),\n        children: seat.label\n      }, seat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectSeat, \"daT/Ou72D8ZKtEIc3NnKxGs/i4g=\");\n_c = SelectSeat;\nexport default SelectSeat;\nvar _c;\n$RefreshReg$(_c, \"SelectSeat\");","map":{"version":3,"names":["React","useEffect","useState","seatService","styles","jsxDEV","_jsxDEV","SelectSeat","timeSlot","prevStep","setSeat","_s","seats","setSeats","selectedSeat","setSelectedSeat","fetchSeats","seatsData","getAvailableSeats","room","id","error","console","handleSeatClick","seat","isBooked","bookSeat","map","s","style","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","length","noSeatsMessage","seatGrid","seatItem","backgroundColor","borderColor","onClick","label","_c","$RefreshReg$"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Book/SelectSeat/SelectSeat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport seatService from '../../../services/seatService';\nimport { styles } from './styles';\n\nconst SelectSeat = ({ timeSlot, prevStep, setSeat }) => {\n    const [seats, setSeats] = useState([]);\n    const [selectedSeat, setSelectedSeat] = useState(null);\n\n    useEffect(() => {\n        if (timeSlot) {\n            fetchSeats(timeSlot);\n        }\n    }, [timeSlot]);\n\n    const fetchSeats = async (timeSlot) => {\n        try {\n            const seatsData = await seatService.getAvailableSeats(timeSlot.room.id, timeSlot.id);\n            setSeats(seatsData);\n        } catch (error) {\n            console.error('Error fetching seats:', error);\n            setSeats([]);\n        }\n    };\n\n    const handleSeatClick = async (seat) => {\n        if (!seat.isBooked) {\n            try {\n                await seatService.bookSeat(seat.id);\n                setSelectedSeat(seat);\n                setSeat(seat);\n                // Update seat booking status in UI\n                setSeats(seats.map(s => s.id === seat.id ? { ...s, isBooked: true } : s));\n            } catch (error) {\n                console.error('Error booking seat:', error);\n            }\n        }\n    };\n\n    return (\n        <div style={styles.container}>\n            <h2 style={styles.title}>Select a Seat</h2>\n            {seats.length === 0 ? (\n                <p style={styles.noSeatsMessage}>No available seat was found</p>\n            ) : (\n                <div style={styles.seatGrid}>\n                    {seats.map((seat) => (\n                        <div\n                            key={seat.id}\n                            style={{\n                                ...styles.seatItem,\n                                backgroundColor: seat.isBooked ? 'red' : 'green',\n                                borderColor: selectedSeat?.id === seat.id ? 'blue' : 'transparent',\n                            }}\n                            onClick={() => handleSeatClick(seat)}\n                        >\n                            {seat.label}\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SelectSeat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,+BAA+B;AACvD,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,EAAE;MACVQ,UAAU,CAACR,QAAQ,CAAC;IACxB;EACJ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMQ,UAAU,GAAG,MAAOR,QAAQ,IAAK;IACnC,IAAI;MACA,MAAMS,SAAS,GAAG,MAAMd,WAAW,CAACe,iBAAiB,CAACV,QAAQ,CAACW,IAAI,CAACC,EAAE,EAAEZ,QAAQ,CAACY,EAAE,CAAC;MACpFP,QAAQ,CAACI,SAAS,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CR,QAAQ,CAAC,EAAE,CAAC;IAChB;EACJ,CAAC;EAED,MAAMU,eAAe,GAAG,MAAOC,IAAI,IAAK;IACpC,IAAI,CAACA,IAAI,CAACC,QAAQ,EAAE;MAChB,IAAI;QACA,MAAMtB,WAAW,CAACuB,QAAQ,CAACF,IAAI,CAACJ,EAAE,CAAC;QACnCL,eAAe,CAACS,IAAI,CAAC;QACrBd,OAAO,CAACc,IAAI,CAAC;QACb;QACAX,QAAQ,CAACD,KAAK,CAACe,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACR,EAAE,KAAKI,IAAI,CAACJ,EAAE,GAAG;UAAE,GAAGQ,CAAC;UAAEH,QAAQ,EAAE;QAAK,CAAC,GAAGG,CAAC,CAAC,CAAC;MAC7E,CAAC,CAAC,OAAOP,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC/C;IACJ;EACJ,CAAC;EAED,oBACIf,OAAA;IAAKuB,KAAK,EAAEzB,MAAM,CAAC0B,SAAU;IAAAC,QAAA,gBACzBzB,OAAA;MAAIuB,KAAK,EAAEzB,MAAM,CAAC4B,KAAM;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1CxB,KAAK,CAACyB,MAAM,KAAK,CAAC,gBACf/B,OAAA;MAAGuB,KAAK,EAAEzB,MAAM,CAACkC,cAAe;MAAAP,QAAA,EAAC;IAA2B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEhE9B,OAAA;MAAKuB,KAAK,EAAEzB,MAAM,CAACmC,QAAS;MAAAR,QAAA,EACvBnB,KAAK,CAACe,GAAG,CAAEH,IAAI,iBACZlB,OAAA;QAEIuB,KAAK,EAAE;UACH,GAAGzB,MAAM,CAACoC,QAAQ;UAClBC,eAAe,EAAEjB,IAAI,CAACC,QAAQ,GAAG,KAAK,GAAG,OAAO;UAChDiB,WAAW,EAAE,CAAA5B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEM,EAAE,MAAKI,IAAI,CAACJ,EAAE,GAAG,MAAM,GAAG;QACzD,CAAE;QACFuB,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAACC,IAAI,CAAE;QAAAO,QAAA,EAEpCP,IAAI,CAACoB;MAAK,GARNpB,IAAI,CAACJ,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASX,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACzB,EAAA,CA1DIJ,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AA4DhB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}