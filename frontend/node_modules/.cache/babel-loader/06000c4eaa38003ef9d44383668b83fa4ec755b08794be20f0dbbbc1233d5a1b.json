{"ast":null,"code":"var _jsxFileName = \"/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Admin/Session/SessionForm/SessionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport roomService from '../../../../services/roomService';\nimport moment from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { styles } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SessionForm({\n  rooms,\n  movies\n}) {\n  _s();\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [timeSlots, setTimeSlots] = useState([]);\n  const handleRoomChange = async selectedOption => {\n    setSelectedRoom(selectedOption);\n    const data = await roomService.getTimeSlotsByRoomId(selectedOption.value);\n    setTimeSlots(data);\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleTimeSlotChange = selectedOption => {\n    setSelectedTimeSlot(selectedOption);\n  };\n  const handleMovieChange = selectedOption => {\n    setSelectedMovie(selectedOption);\n  };\n  const handleCreateSession = e => {\n    e.preventDefault();\n    const sessionData = {\n      room: selectedRoom,\n      date: selectedDate,\n      timeSlot: selectedTimeSlot,\n      movie: selectedMovie\n    };\n    console.log(sessionData);\n    // Here you can send the sessionData to your API or handle it as needed\n  };\n  const roomOptions = rooms.map(room => ({\n    value: room.id,\n    label: room.name\n  }));\n  const timeSlotsOptions = timeSlots.map(slot => ({\n    value: slot.id,\n    label: moment.utc(slot.start_time).format('HH:mm') + \" - \" + moment.utc(slot.end_time).format('HH:mm')\n  }));\n  const moviesOptions = movies.map(movie => ({\n    value: movie.id,\n    label: movie.title\n  }));\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCreateSession,\n    style: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: selectedDate,\n      onChange: handleDateChange,\n      style: styles.datePicker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: roomOptions,\n      onChange: handleRoomChange,\n      value: selectedRoom,\n      styles: {\n        container: provided => ({\n          ...provided,\n          ...styles.select\n        })\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: timeSlotsOptions,\n      onChange: handleTimeSlotChange,\n      value: selectedTimeSlot,\n      styles: {\n        container: provided => ({\n          ...provided,\n          ...styles.select\n        })\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: moviesOptions,\n      onChange: handleMovieChange,\n      value: selectedMovie,\n      styles: {\n        container: provided => ({\n          ...provided,\n          ...styles.select\n        })\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: styles.button,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(SessionForm, \"ThCdkKekumSIK+nnoNY8oA0IC8A=\");\n_c = SessionForm;\nexport default SessionForm;\nvar _c;\n$RefreshReg$(_c, \"SessionForm\");","map":{"version":3,"names":["React","useState","Select","roomService","moment","DatePicker","styles","jsxDEV","_jsxDEV","SessionForm","rooms","movies","_s","selectedRoom","setSelectedRoom","selectedDate","setSelectedDate","Date","selectedTimeSlot","setSelectedTimeSlot","selectedMovie","setSelectedMovie","timeSlots","setTimeSlots","handleRoomChange","selectedOption","data","getTimeSlotsByRoomId","value","handleDateChange","date","handleTimeSlotChange","handleMovieChange","handleCreateSession","e","preventDefault","sessionData","room","timeSlot","movie","console","log","roomOptions","map","id","label","name","timeSlotsOptions","slot","utc","start_time","format","end_time","moviesOptions","title","onSubmit","style","form","children","selected","onChange","datePicker","fileName","_jsxFileName","lineNumber","columnNumber","options","container","provided","select","type","button","_c","$RefreshReg$"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Admin/Session/SessionForm/SessionForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Select from 'react-select';\nimport roomService from '../../../../services/roomService';\nimport moment from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { styles } from './styles';\n\nfunction SessionForm({ rooms, movies }) {\n    const [selectedRoom, setSelectedRoom] = useState(null);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\n    const [selectedMovie, setSelectedMovie] = useState(null);\n    const [timeSlots, setTimeSlots] = useState([]);\n\n    const handleRoomChange = async (selectedOption) => {\n        setSelectedRoom(selectedOption);\n        const data = await roomService.getTimeSlotsByRoomId(selectedOption.value);\n        setTimeSlots(data);\n    };\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n    const handleTimeSlotChange = (selectedOption) => {\n        setSelectedTimeSlot(selectedOption);\n    };\n\n    const handleMovieChange = (selectedOption) => {\n        setSelectedMovie(selectedOption);\n    };\n\n    const handleCreateSession = (e) => {\n        e.preventDefault();\n        const sessionData = {\n            room: selectedRoom,\n            date: selectedDate,\n            timeSlot: selectedTimeSlot,\n            movie: selectedMovie\n        };\n        console.log(sessionData);\n        // Here you can send the sessionData to your API or handle it as needed\n    };\n\n    const roomOptions = rooms.map(room => ({ value: room.id, label: room.name }));\n    const timeSlotsOptions = timeSlots.map(slot => ({ value: slot.id, label: moment.utc(slot.start_time).format('HH:mm') + \" - \" + moment.utc(slot.end_time).format('HH:mm')}));\n    const moviesOptions = movies.map(movie => ({ value: movie.id, label: movie.title }));\n\n    return (\n        <form onSubmit={handleCreateSession} style={styles.form}>\n            <DatePicker \n                selected={selectedDate} \n                onChange={handleDateChange} \n                style={styles.datePicker}\n            />\n            <Select \n                options={roomOptions} \n                onChange={handleRoomChange} \n                value={selectedRoom}\n                styles={{ container: (provided) => ({ ...provided, ...styles.select }) }}\n            />\n            <Select \n                options={timeSlotsOptions} \n                onChange={handleTimeSlotChange} \n                value={selectedTimeSlot}\n                styles={{ container: (provided) => ({ ...provided, ...styles.select }) }}\n            />\n            <Select \n                options={moviesOptions} \n                onChange={handleMovieChange} \n                value={selectedMovie}\n                styles={{ container: (provided) => ({ ...provided, ...styles.select }) }}\n            />\n            <button type=\"submit\" style={styles.button}>Create</button>\n        </form>\n    );\n}\n\nexport default SessionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}