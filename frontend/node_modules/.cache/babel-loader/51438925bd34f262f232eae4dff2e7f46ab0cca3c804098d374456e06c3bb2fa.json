{"ast":null,"code":"var _jsxFileName = \"/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Book/SelectTimeSlot/SelectTimeSlot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport roomService from '../../../services/roomService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectTimeSlot = ({\n  setTimeSlot,\n  prevStep,\n  roomID,\n  filmID\n}) => {\n  _s();\n  const [timeSlots, setTimeSlots] = useState([]);\n  useEffect(() => {\n    if (roomID && filmID) {\n      fetchTimeSlots(roomID, filmID);\n    }\n  }, [room, filmID]);\n  const fetchTimeSlots = async (roomID, filmID) => {\n    try {\n      const timeSlotsData = await roomService.getTimeSlotsByRoomId(roomID);\n      console.log(timeSlots);\n      setTimeSlots(timeSlotsData);\n    } catch (error) {\n      console.error('Error fetching time slots:', error);\n      setTimeSlots([]);\n    }\n  };\n  const handleTimeSlotSelection = timeSlot => {\n    setTimeSlot(timeSlot);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a Time Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), timeSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading time slots...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: timeSlots.map(timeSlot => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTimeSlotSelection(timeSlot.time),\n        children: timeSlot.time\n      }, timeSlot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: prevStep,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectTimeSlot, \"FKwLpPvvIvVx/riZz2/zhvKJxOo=\");\n_c = SelectTimeSlot;\nexport default SelectTimeSlot;\nvar _c;\n$RefreshReg$(_c, \"SelectTimeSlot\");","map":{"version":3,"names":["React","useEffect","useState","roomService","jsxDEV","_jsxDEV","SelectTimeSlot","setTimeSlot","prevStep","roomID","filmID","_s","timeSlots","setTimeSlots","fetchTimeSlots","room","timeSlotsData","getTimeSlotsByRoomId","console","log","error","handleTimeSlotSelection","timeSlot","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","time","id","_c","$RefreshReg$"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Book/SelectTimeSlot/SelectTimeSlot.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport roomService from '../../../services/roomService';\n\nconst SelectTimeSlot = ({ setTimeSlot, prevStep, roomID, filmID }) => {\n    const [timeSlots, setTimeSlots] = useState([]);\n    \n    useEffect(() => {\n        if (roomID && filmID) {\n            fetchTimeSlots(roomID, filmID);\n        }\n    }, [room, filmID]);\n\n    const fetchTimeSlots = async (roomID, filmID) => {\n        try {\n            const timeSlotsData = await roomService.getTimeSlotsByRoomId(roomID);\n            console.log(timeSlots)\n            setTimeSlots(timeSlotsData);\n        } catch (error) {\n            console.error('Error fetching time slots:', error);\n            setTimeSlots([]);\n        }\n    };\n\n    const handleTimeSlotSelection = (timeSlot) => {\n        setTimeSlot(timeSlot);\n    };\n\n    return (\n        <div>\n            <h2>Select a Time Slot</h2>\n            {timeSlots.length === 0 ? (\n                <p>Loading time slots...</p>\n            ) : (\n                <div>\n                    {timeSlots.map((timeSlot) => (\n                        <button key={timeSlot.id} onClick={() => handleTimeSlotSelection(timeSlot.time)}>\n                            {timeSlot.time}\n                        </button>\n                    ))}\n                </div>\n            )}\n            <button onClick={prevStep}>Back</button>\n        </div>\n    );\n};\n\nexport default SelectTimeSlot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,IAAIQ,MAAM,IAAIC,MAAM,EAAE;MAClBI,cAAc,CAACL,MAAM,EAAEC,MAAM,CAAC;IAClC;EACJ,CAAC,EAAE,CAACK,IAAI,EAAEL,MAAM,CAAC,CAAC;EAElB,MAAMI,cAAc,GAAG,MAAAA,CAAOL,MAAM,EAAEC,MAAM,KAAK;IAC7C,IAAI;MACA,MAAMM,aAAa,GAAG,MAAMb,WAAW,CAACc,oBAAoB,CAACR,MAAM,CAAC;MACpES,OAAO,CAACC,GAAG,CAACP,SAAS,CAAC;MACtBC,YAAY,CAACG,aAAa,CAAC;IAC/B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDP,YAAY,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAED,MAAMQ,uBAAuB,GAAIC,QAAQ,IAAK;IAC1Cf,WAAW,CAACe,QAAQ,CAAC;EACzB,CAAC;EAED,oBACIjB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1Bf,SAAS,CAACgB,MAAM,KAAK,CAAC,gBACnBvB,OAAA;MAAAkB,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE5BtB,OAAA;MAAAkB,QAAA,EACKX,SAAS,CAACiB,GAAG,CAAEP,QAAQ,iBACpBjB,OAAA;QAA0ByB,OAAO,EAAEA,CAAA,KAAMT,uBAAuB,CAACC,QAAQ,CAACS,IAAI,CAAE;QAAAR,QAAA,EAC3ED,QAAQ,CAACS;MAAI,GADLT,QAAQ,CAACU,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eACDtB,OAAA;MAAQyB,OAAO,EAAEtB,QAAS;MAAAe,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAAChB,EAAA,CAzCIL,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}