{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api/rooms/';\nasync function getAllRooms() {\n  const response = await axios.get(API_BASE_URL);\n  return response.data;\n}\nasync function getRoomById(id) {\n  const response = await axios.get(`${API_BASE_URL}${id}`);\n  return response.data;\n}\nasync function createRoom(data) {\n  const response = await axios.post(API_BASE_URL, data);\n  return response.data;\n}\nasync function updateRoom(id, data) {\n  const response = await axios.put(`${API_BASE_URL}${id}`, data);\n  return response.data;\n}\nasync function deleteRoom(id) {\n  await axios.delete(`${API_BASE_URL}${id}`);\n}\nasync function getTimeSlotsByRoomId(roomId) {\n  const response = await axios.get(`${API_BASE_URL}${roomId}/time-slots`);\n  return response.data;\n}\nasync function addTimeSlot(roomId, timeSlotData) {\n  const response = await axios.post(`${API_BASE_URL}${roomId}/time-slots`, timeSlotData);\n  return response.data;\n}\nasync function updateTimeSlot(roomId, timeSlotId, updatedTimeSlotData) {\n  const response = await axios.put(`${API_BASE_URL}${roomId}/time-slots/${timeSlotId}`, updatedTimeSlotData);\n  return response.data;\n}\nasync function deleteTimeSlot(roomId, timeSlotId) {\n  await axios.delete(`${API_BASE_URL}${roomId}/time-slots/${timeSlotId}`);\n}\nconst roomService = {\n  getAllRooms,\n  getRoomById,\n  createRoom,\n  updateRoom,\n  deleteRoom,\n  getTimeSlotsByRoomId,\n  addTimeSlot,\n  updateTimeSlot,\n  deleteTimeSlot\n};\nexport default roomService;","map":{"version":3,"names":["axios","API_BASE_URL","getAllRooms","response","get","data","getRoomById","id","createRoom","post","updateRoom","put","deleteRoom","delete","getTimeSlotsByRoomId","roomId","addTimeSlot","timeSlotData","updateTimeSlot","timeSlotId","updatedTimeSlotData","deleteTimeSlot","roomService"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/services/roomService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000/api/rooms/';\n\nasync function getAllRooms() {\n    const response = await axios.get(API_BASE_URL);\n    return response.data;\n}\n\nasync function getRoomById(id) {\n    const response = await axios.get(`${API_BASE_URL}${id}`);\n    return response.data;\n}\n\nasync function createRoom(data) {\n    const response = await axios.post(API_BASE_URL, data);\n    return response.data;\n}\n\nasync function updateRoom(id, data) {\n    const response = await axios.put(`${API_BASE_URL}${id}`, data);\n    return response.data;\n}\n\nasync function deleteRoom(id) {\n    await axios.delete(`${API_BASE_URL}${id}`);\n}\n\nasync function getTimeSlotsByRoomId(roomId) {\n    const response = await axios.get(`${API_BASE_URL}${roomId}/time-slots`);\n    return response.data;\n}\n\nasync function addTimeSlot(roomId, timeSlotData) {\n    const response = await axios.post(`${API_BASE_URL}${roomId}/time-slots`, timeSlotData);\n    return response.data;\n}\n\nasync function updateTimeSlot(roomId, timeSlotId, updatedTimeSlotData) {\n    const response = await axios.put(`${API_BASE_URL}${roomId}/time-slots/${timeSlotId}`, updatedTimeSlotData);\n    return response.data;\n}\n\nasync function deleteTimeSlot(roomId, timeSlotId) {\n    await axios.delete(`${API_BASE_URL}${roomId}/time-slots/${timeSlotId}`);\n}\n\nconst roomService = {\n    getAllRooms,\n    getRoomById,\n    createRoom,\n    updateRoom,\n    deleteRoom,\n    getTimeSlotsByRoomId,\n    addTimeSlot,\n    updateTimeSlot,\n    deleteTimeSlot\n};\n\nexport default roomService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,kCAAkC;AAEvD,eAAeC,WAAWA,CAAA,EAAG;EACzB,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,YAAY,CAAC;EAC9C,OAAOE,QAAQ,CAACE,IAAI;AACxB;AAEA,eAAeC,WAAWA,CAACC,EAAE,EAAE;EAC3B,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,GAAGM,EAAE,EAAE,CAAC;EACxD,OAAOJ,QAAQ,CAACE,IAAI;AACxB;AAEA,eAAeG,UAAUA,CAACH,IAAI,EAAE;EAC5B,MAAMF,QAAQ,GAAG,MAAMH,KAAK,CAACS,IAAI,CAACR,YAAY,EAAEI,IAAI,CAAC;EACrD,OAAOF,QAAQ,CAACE,IAAI;AACxB;AAEA,eAAeK,UAAUA,CAACH,EAAE,EAAEF,IAAI,EAAE;EAChC,MAAMF,QAAQ,GAAG,MAAMH,KAAK,CAACW,GAAG,CAAC,GAAGV,YAAY,GAAGM,EAAE,EAAE,EAAEF,IAAI,CAAC;EAC9D,OAAOF,QAAQ,CAACE,IAAI;AACxB;AAEA,eAAeO,UAAUA,CAACL,EAAE,EAAE;EAC1B,MAAMP,KAAK,CAACa,MAAM,CAAC,GAAGZ,YAAY,GAAGM,EAAE,EAAE,CAAC;AAC9C;AAEA,eAAeO,oBAAoBA,CAACC,MAAM,EAAE;EACxC,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,GAAGc,MAAM,aAAa,CAAC;EACvE,OAAOZ,QAAQ,CAACE,IAAI;AACxB;AAEA,eAAeW,WAAWA,CAACD,MAAM,EAAEE,YAAY,EAAE;EAC7C,MAAMd,QAAQ,GAAG,MAAMH,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,GAAGc,MAAM,aAAa,EAAEE,YAAY,CAAC;EACtF,OAAOd,QAAQ,CAACE,IAAI;AACxB;AAEA,eAAea,cAAcA,CAACH,MAAM,EAAEI,UAAU,EAAEC,mBAAmB,EAAE;EACnE,MAAMjB,QAAQ,GAAG,MAAMH,KAAK,CAACW,GAAG,CAAC,GAAGV,YAAY,GAAGc,MAAM,eAAeI,UAAU,EAAE,EAAEC,mBAAmB,CAAC;EAC1G,OAAOjB,QAAQ,CAACE,IAAI;AACxB;AAEA,eAAegB,cAAcA,CAACN,MAAM,EAAEI,UAAU,EAAE;EAC9C,MAAMnB,KAAK,CAACa,MAAM,CAAC,GAAGZ,YAAY,GAAGc,MAAM,eAAeI,UAAU,EAAE,CAAC;AAC3E;AAEA,MAAMG,WAAW,GAAG;EAChBpB,WAAW;EACXI,WAAW;EACXE,UAAU;EACVE,UAAU;EACVE,UAAU;EACVE,oBAAoB;EACpBE,WAAW;EACXE,cAAc;EACdG;AACJ,CAAC;AAED,eAAeC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}