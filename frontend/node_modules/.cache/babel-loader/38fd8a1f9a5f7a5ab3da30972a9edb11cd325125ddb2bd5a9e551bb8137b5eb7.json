{"ast":null,"code":"var _jsxFileName = \"/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Admin/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setAuth\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      // Assuming your backend returns a token or some kind of auth data\n      if (data.success) {\n        setAuth(true);\n        navigate('/admin');\n      } else {\n        alert('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('There was a problem with the fetch operation:', error);\n      alert('Login failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","setAuth","_s","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","success","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Admin/Login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = ({ setAuth }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        try {\n            const response = await fetch('http://localhost:8000/api/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ username, password }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            // Assuming your backend returns a token or some kind of auth data\n            if (data.success) {\n                setAuth(true);\n                navigate('/admin');\n            } else {\n                alert('Invalid credentials');\n            }\n        } catch (error) {\n            console.error('There was a problem with the fetch operation:', error);\n            alert('Login failed. Please try again.');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,QAAQ;UAAEE;QAAS,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC;MACA,IAAID,IAAI,CAACE,OAAO,EAAE;QACdrB,OAAO,CAAC,IAAI,CAAC;QACbM,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAC,MAAM;QACHgB,KAAK,CAAC,qBAAqB,CAAC;MAChC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrED,KAAK,CAAC,iCAAiC,CAAC;IAC5C;EACJ,CAAC;EAED,oBACIxB,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd/B,OAAA;MAAMgC,QAAQ,EAAEvB,YAAa;MAAAkB,QAAA,gBACzB3B,OAAA;QACIiC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE/B,QAAS;QAChBgC,QAAQ,EAAG1B,CAAC,IAAKL,WAAW,CAACK,CAAC,CAAC2B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACF/B,OAAA;QACIiC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE7B,QAAS;QAChB8B,QAAQ,EAAG1B,CAAC,IAAKH,WAAW,CAACG,CAAC,CAAC2B,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACF/B,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC5B,EAAA,CAvDIF,KAAK;EAAA,QAGUH,WAAW;AAAA;AAAAwC,EAAA,GAH1BrC,KAAK;AAyDX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}