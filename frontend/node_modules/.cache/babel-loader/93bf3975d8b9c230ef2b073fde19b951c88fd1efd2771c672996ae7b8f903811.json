{"ast":null,"code":"var _jsxFileName = \"/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Admin/Movie/MovieList/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport movieService from '../../../../services/movieService';\nimport { styles } from './styles';\nimport TopBar from '../../TopBar/TopBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [newMovieName, setNewMovieName] = useState('');\n  const [newMoviePosterFile, setNewMoviePosterFile] = useState(null); // State for file input\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    try {\n      const data = await movieService.getAllMovies();\n      setMovies(data);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n  const handleCreateMovie = async e => {\n    e.preventDefault();\n    if (newMovieName.trim() === '' || !newMoviePosterFile) return;\n\n    // Upload poster file\n    const formData = new FormData();\n    formData.append('name', newMovieName);\n    formData.append('poster', newMoviePosterFile);\n    try {\n      const newMovie = await movieService.createMovie(formData);\n      setMovies([...movies, newMovie]);\n      setNewMovieName('');\n      setNewMoviePosterFile(null);\n    } catch (error) {\n      console.error('Error creating movie:', error);\n    }\n  };\n  const handleDeleteMovie = async id => {\n    const isConfirmed = window.confirm('Are you sure you want to delete this movie?');\n    if (!isConfirmed) return;\n    try {\n      await movieService.deleteMovie(id);\n      setMovies(movies.filter(movie => movie.id !== id));\n    } catch (error) {\n      console.error('Error deleting movie:', error);\n    }\n  };\n  const handlePosterFileChange = e => {\n    const file = e.target.files[0];\n    setNewMoviePosterFile(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.movieListContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.header,\n        children: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: styles.form,\n        onSubmit: handleCreateMovie,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMovieName,\n          onChange: e => setNewMovieName(e.target.value),\n          style: styles.input,\n          placeholder: \"Enter movie name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"poster\",\n          style: styles.fileInputLabel,\n          children: [\"Choose Poster:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"poster\",\n            onChange: handlePosterFileChange,\n            style: styles.fileInput,\n            accept: \"image/*\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: styles.button,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: styles.movieList,\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: styles.movieListItem,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster,\n            alt: `${movie.name} poster`,\n            style: styles.posterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: movie.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteMovie(movie.id),\n            style: styles.deleteButton,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieList, \"sCz2tzBoZz4VBiS+X2BIFGyYpis=\");\n_c = MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","movieService","styles","TopBar","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","newMovieName","setNewMovieName","newMoviePosterFile","setNewMoviePosterFile","fetchMovies","data","getAllMovies","error","console","handleCreateMovie","e","preventDefault","trim","formData","FormData","append","newMovie","createMovie","handleDeleteMovie","id","isConfirmed","window","confirm","deleteMovie","filter","movie","handlePosterFileChange","file","target","files","children","fileName","_jsxFileName","lineNumber","columnNumber","style","movieListContainer","header","form","onSubmit","type","value","onChange","input","placeholder","required","htmlFor","fileInputLabel","fileInput","accept","button","movieList","map","movieListItem","src","poster","alt","name","posterImage","onClick","deleteButton","_c","$RefreshReg$"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Admin/Movie/MovieList/MovieList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport movieService from '../../../../services/movieService';\nimport { styles } from './styles';\nimport TopBar from '../../TopBar/TopBar';\n\nconst MovieList = () => {\n    const [movies, setMovies] = useState([]);\n    const [newMovieName, setNewMovieName] = useState('');\n    const [newMoviePosterFile, setNewMoviePosterFile] = useState(null); // State for file input\n\n    useEffect(() => {\n        fetchMovies();\n    }, []);\n\n    const fetchMovies = async () => {\n        try {\n            const data = await movieService.getAllMovies();\n            setMovies(data);\n        } catch (error) {\n            console.error('Error fetching movies:', error);\n        }\n    };\n\n    const handleCreateMovie = async (e) => {\n        e.preventDefault();\n        if (newMovieName.trim() === '' || !newMoviePosterFile) return;\n\n        // Upload poster file\n        const formData = new FormData();\n        formData.append('name', newMovieName);\n        formData.append('poster', newMoviePosterFile);\n\n        try {\n            const newMovie = await movieService.createMovie(formData);\n            setMovies([...movies, newMovie]);\n            setNewMovieName('');\n            setNewMoviePosterFile(null);\n        } catch (error) {\n            console.error('Error creating movie:', error);\n        }\n    };\n\n    const handleDeleteMovie = async (id) => {\n        const isConfirmed = window.confirm('Are you sure you want to delete this movie?');\n        if (!isConfirmed) return;\n\n        try {\n            await movieService.deleteMovie(id);\n            setMovies(movies.filter(movie => movie.id !== id));\n        } catch (error) {\n            console.error('Error deleting movie:', error);\n        }\n    };\n\n    const handlePosterFileChange = (e) => {\n        const file = e.target.files[0];\n        setNewMoviePosterFile(file);\n    };\n\n    return (\n        <div>\n            <TopBar />\n            <div style={styles.movieListContainer}>\n                <h2 style={styles.header}>Movies</h2>\n                <form style={styles.form} onSubmit={handleCreateMovie}>\n                    <input\n                        type=\"text\"\n                        value={newMovieName}\n                        onChange={(e) => setNewMovieName(e.target.value)}\n                        style={styles.input}\n                        placeholder=\"Enter movie name\"\n                        required\n                    />\n                    <label htmlFor=\"poster\" style={styles.fileInputLabel}>\n                        Choose Poster:\n                        <input\n                            type=\"file\"\n                            id=\"poster\"\n                            onChange={handlePosterFileChange}\n                            style={styles.fileInput}\n                            accept=\"image/*\"\n                            required\n                        />\n                    </label>\n                    <button type=\"submit\" style={styles.button}>Create</button>\n                </form>\n                <ul style={styles.movieList}>\n                    {movies.map(movie => (\n                        <li key={movie.id} style={styles.movieListItem}>\n                            <img src={movie.poster} alt={`${movie.name} poster`} style={styles.posterImage} />\n                            <span>{movie.name}</span>\n                            <button onClick={() => handleDeleteMovie(movie.id)} style={styles.deleteButton}>Delete</button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpEC,SAAS,CAAC,MAAM;IACZc,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMd,YAAY,CAACe,YAAY,CAAC,CAAC;MAC9CP,SAAS,CAACM,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIX,YAAY,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAACV,kBAAkB,EAAE;;IAEvD;IACA,MAAMW,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEf,YAAY,CAAC;IACrCa,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEb,kBAAkB,CAAC;IAE7C,IAAI;MACA,MAAMc,QAAQ,GAAG,MAAMzB,YAAY,CAAC0B,WAAW,CAACJ,QAAQ,CAAC;MACzDd,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEkB,QAAQ,CAAC,CAAC;MAChCf,eAAe,CAAC,EAAE,CAAC;MACnBE,qBAAqB,CAAC,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAMW,iBAAiB,GAAG,MAAOC,EAAE,IAAK;IACpC,MAAMC,WAAW,GAAGC,MAAM,CAACC,OAAO,CAAC,6CAA6C,CAAC;IACjF,IAAI,CAACF,WAAW,EAAE;IAElB,IAAI;MACA,MAAM7B,YAAY,CAACgC,WAAW,CAACJ,EAAE,CAAC;MAClCpB,SAAS,CAACD,MAAM,CAAC0B,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAMmB,sBAAsB,GAAIhB,CAAC,IAAK;IAClC,MAAMiB,IAAI,GAAGjB,CAAC,CAACkB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B1B,qBAAqB,CAACwB,IAAI,CAAC;EAC/B,CAAC;EAED,oBACIhC,OAAA;IAAAmC,QAAA,gBACInC,OAAA,CAACF,MAAM;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvC,OAAA;MAAKwC,KAAK,EAAE3C,MAAM,CAAC4C,kBAAmB;MAAAN,QAAA,gBAClCnC,OAAA;QAAIwC,KAAK,EAAE3C,MAAM,CAAC6C,MAAO;QAAAP,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCvC,OAAA;QAAMwC,KAAK,EAAE3C,MAAM,CAAC8C,IAAK;QAACC,QAAQ,EAAE9B,iBAAkB;QAAAqB,QAAA,gBAClDnC,OAAA;UACI6C,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEzC,YAAa;UACpB0C,QAAQ,EAAGhC,CAAC,IAAKT,eAAe,CAACS,CAAC,CAACkB,MAAM,CAACa,KAAK,CAAE;UACjDN,KAAK,EAAE3C,MAAM,CAACmD,KAAM;UACpBC,WAAW,EAAC,kBAAkB;UAC9BC,QAAQ;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACFvC,OAAA;UAAOmD,OAAO,EAAC,QAAQ;UAACX,KAAK,EAAE3C,MAAM,CAACuD,cAAe;UAAAjB,QAAA,GAAC,gBAElD,eAAAnC,OAAA;YACI6C,IAAI,EAAC,MAAM;YACXrB,EAAE,EAAC,QAAQ;YACXuB,QAAQ,EAAEhB,sBAAuB;YACjCS,KAAK,EAAE3C,MAAM,CAACwD,SAAU;YACxBC,MAAM,EAAC,SAAS;YAChBJ,QAAQ;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACRvC,OAAA;UAAQ6C,IAAI,EAAC,QAAQ;UAACL,KAAK,EAAE3C,MAAM,CAAC0D,MAAO;UAAApB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACPvC,OAAA;QAAIwC,KAAK,EAAE3C,MAAM,CAAC2D,SAAU;QAAArB,QAAA,EACvBhC,MAAM,CAACsD,GAAG,CAAC3B,KAAK,iBACb9B,OAAA;UAAmBwC,KAAK,EAAE3C,MAAM,CAAC6D,aAAc;UAAAvB,QAAA,gBAC3CnC,OAAA;YAAK2D,GAAG,EAAE7B,KAAK,CAAC8B,MAAO;YAACC,GAAG,EAAE,GAAG/B,KAAK,CAACgC,IAAI,SAAU;YAACtB,KAAK,EAAE3C,MAAM,CAACkE;UAAY;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClFvC,OAAA;YAAAmC,QAAA,EAAOL,KAAK,CAACgC;UAAI;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzBvC,OAAA;YAAQgE,OAAO,EAAEA,CAAA,KAAMzC,iBAAiB,CAACO,KAAK,CAACN,EAAE,CAAE;YAACgB,KAAK,EAAE3C,MAAM,CAACoE,YAAa;YAAA9B,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAH1FT,KAAK,CAACN,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACrC,EAAA,CA7FID,SAAS;AAAAiE,EAAA,GAATjE,SAAS;AAAA,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}