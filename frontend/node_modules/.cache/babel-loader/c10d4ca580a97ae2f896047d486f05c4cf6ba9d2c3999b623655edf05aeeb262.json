{"ast":null,"code":"var _jsxFileName = \"/home/robond/Desktop/current_projects/cinema-app/frontend/src/components/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { isAuthenticated } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const isAuthenticatedResult = await isAuthenticated();\n        setAuthenticated(isAuthenticatedResult);\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        setAuthenticated(false); // Handle error appropriately\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  if (loading) {\n    return null; // or a loading spinner or message\n  }\n  return authenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 39\n  }, this);\n};\n_s(PrivateRoute, \"dQUkpQg5YNPyiQ+ETiZsvSjiKnA=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","isAuthenticated","jsxDEV","_jsxDEV","PrivateRoute","children","_s","loading","setLoading","authenticated","setAuthenticated","checkAuth","isAuthenticatedResult","error","console","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { isAuthenticated } from '../services/auth';\n\nconst PrivateRoute = ({ children }) => {\n    const [loading, setLoading] = useState(true);\n    const [authenticated, setAuthenticated] = useState(false);\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            try {\n                const isAuthenticatedResult = await isAuthenticated();\n                setAuthenticated(isAuthenticatedResult);\n            } catch (error) {\n                console.error('Error checking authentication:', error);\n                setAuthenticated(false); // Handle error appropriately\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        checkAuth();\n    }, []);\n\n    if (loading) {\n        return null; // or a loading spinner or message\n    }\n\n    return authenticated ? children : <Navigate to=\"/login\" />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,qBAAqB,GAAG,MAAMX,eAAe,CAAC,CAAC;QACrDS,gBAAgB,CAACE,qBAAqB,CAAC;MAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDH,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;MAC7B,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACT,OAAO,IAAI,CAAC,CAAC;EACjB;EAEA,OAAOE,aAAa,GAAGJ,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACe,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;AAACb,EAAA,CAzBIF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}