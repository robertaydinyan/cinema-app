{"ast":null,"code":"import axios from 'axios';\nexport const setAccessToken = token => {\n  localStorage.setItem(TOKEN_KEY, token);\n};\nexport const getAccessToken = () => {\n  return localStorage.getItem(TOKEN_KEY);\n};\nexport const clearAccessToken = () => {\n  localStorage.removeItem(TOKEN_KEY);\n};\nconst login = async (email, password) => {\n  try {\n    const response = await axios.post('http://localhost:8000/api/login', {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport default login;","map":{"version":3,"names":["axios","setAccessToken","token","localStorage","setItem","TOKEN_KEY","getAccessToken","getItem","clearAccessToken","removeItem","login","email","password","response","post","data","error"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/services/auth.js"],"sourcesContent":["\nimport axios from 'axios';\n\nexport const setAccessToken = (token) => {\n    localStorage.setItem(TOKEN_KEY, token);\n};\n\nexport const getAccessToken = () => {\n    return localStorage.getItem(TOKEN_KEY);\n};\n\nexport const clearAccessToken = () => {\n    localStorage.removeItem(TOKEN_KEY);\n};\n\nconst login = async (email, password) => {\n    try {\n        const response = await axios.post('http://localhost:8000/api/login', {\n            email,\n            password\n        });\n\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n\nexport default login;"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,cAAc,GAAIC,KAAK,IAAK;EACrCC,YAAY,CAACC,OAAO,CAACC,SAAS,EAAEH,KAAK,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMI,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAOH,YAAY,CAACI,OAAO,CAACF,SAAS,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;EAClCL,YAAY,CAACM,UAAU,CAACJ,SAAS,CAAC;AACtC,CAAC;AAED,MAAMK,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACrC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,iCAAiC,EAAE;MACjEH,KAAK;MACLC;IACJ,CAAC,CAAC;IAEF,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}