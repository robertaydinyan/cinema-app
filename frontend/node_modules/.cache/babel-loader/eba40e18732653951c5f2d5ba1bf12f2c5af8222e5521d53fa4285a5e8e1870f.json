{"ast":null,"code":"var _jsxFileName = \"/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Admin/Session/SessionForm/SessionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport roomService from '../../../../services/roomService';\nimport { styles } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SessionForm({\n  rooms\n}) {\n  _s();\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [timeSlots, setTimeSlots] = useState([]);\n  const handleRoomChange = async selectedOption => {\n    setSelectedRoom(selectedOption);\n    const data = await roomService.getTimeSlotsByRoomId(selectedOption.value); // Fetch time slots based on selected room\n    setTimeSlots(data);\n  };\n  const handleCreateSession = e => {\n    e.preventDefault();\n  };\n  const roomOptions = rooms.map(room => ({\n    value: room.id,\n    label: room.name\n  }));\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: styles.roomListForm,\n    onSubmit: handleCreateSession,\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      options: roomOptions,\n      onChange: handleRoomChange,\n      value: selectedRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: styles.roomListButton,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: slot.time\n      }, slot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this) // Assuming each slot has an id and time\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(SessionForm, \"5EgeIrD5knRSa9LNodz3gdTbUJQ=\");\n_c = SessionForm;\nexport default RoomForm;\nvar _c;\n$RefreshReg$(_c, \"SessionForm\");","map":{"version":3,"names":["React","useState","useEffect","Select","roomService","styles","jsxDEV","_jsxDEV","SessionForm","rooms","_s","selectedRoom","setSelectedRoom","timeSlots","setTimeSlots","handleRoomChange","selectedOption","data","getTimeSlotsByRoomId","value","handleCreateSession","e","preventDefault","roomOptions","map","room","id","label","name","style","roomListForm","onSubmit","children","options","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","roomListButton","slot","time","_c","RoomForm","$RefreshReg$"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Admin/Session/SessionForm/SessionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport roomService from '../../../../services/roomService';\nimport { styles } from './styles';\n\nfunction SessionForm({ rooms }) {\n    const [selectedRoom, setSelectedRoom] = useState(null);\n    const [timeSlots, setTimeSlots] = useState([]);\n\n    const handleRoomChange = async (selectedOption) => {\n        setSelectedRoom(selectedOption);\n        const data = await roomService.getTimeSlotsByRoomId(selectedOption.value);  // Fetch time slots based on selected room\n        setTimeSlots(data);\n    };\n\n    const handleCreateSession = (e) => {\n        e.preventDefault();\n    };\n\n    const roomOptions = rooms.map(room => ({ value: room.id, label: room.name }));\n\n    return (\n        <form style={styles.roomListForm} onSubmit={handleCreateSession}>\n            <Select \n                options={roomOptions} \n                onChange={handleRoomChange} \n                value={selectedRoom}\n            />\n            <button type=\"submit\" style={styles.roomListButton}>Create</button>\n            <ul>\n                {timeSlots.map(slot => (\n                    <li key={slot.id}>{slot.time}</li>  // Assuming each slot has an id and time\n                ))}\n            </ul>\n        </form>\n    );\n}\n\nexport default RoomForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,WAAW,MAAM,kCAAkC;AAC1D,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,WAAWA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMc,gBAAgB,GAAG,MAAOC,cAAc,IAAK;IAC/CJ,eAAe,CAACI,cAAc,CAAC;IAC/B,MAAMC,IAAI,GAAG,MAAMb,WAAW,CAACc,oBAAoB,CAACF,cAAc,CAACG,KAAK,CAAC,CAAC,CAAE;IAC5EL,YAAY,CAACG,IAAI,CAAC;EACtB,CAAC;EAED,MAAMG,mBAAmB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;EACtB,CAAC;EAED,MAAMC,WAAW,GAAGd,KAAK,CAACe,GAAG,CAACC,IAAI,KAAK;IAAEN,KAAK,EAAEM,IAAI,CAACC,EAAE;IAAEC,KAAK,EAAEF,IAAI,CAACG;EAAK,CAAC,CAAC,CAAC;EAE7E,oBACIrB,OAAA;IAAMsB,KAAK,EAAExB,MAAM,CAACyB,YAAa;IAACC,QAAQ,EAAEX,mBAAoB;IAAAY,QAAA,gBAC5DzB,OAAA,CAACJ,MAAM;MACH8B,OAAO,EAAEV,WAAY;MACrBW,QAAQ,EAAEnB,gBAAiB;MAC3BI,KAAK,EAAER;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACF/B,OAAA;MAAQgC,IAAI,EAAC,QAAQ;MAACV,KAAK,EAAExB,MAAM,CAACmC,cAAe;MAAAR,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnE/B,OAAA;MAAAyB,QAAA,EACKnB,SAAS,CAACW,GAAG,CAACiB,IAAI,iBACflC,OAAA;QAAAyB,QAAA,EAAmBS,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACf,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,CAAE;MACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEf;AAAC5B,EAAA,CA/BQF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAiCpB,eAAeoC,QAAQ;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}