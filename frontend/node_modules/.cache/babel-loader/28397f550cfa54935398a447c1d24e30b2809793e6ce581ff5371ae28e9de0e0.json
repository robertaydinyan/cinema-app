{"ast":null,"code":"var _jsxFileName = \"/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Admin/Session/SessionForm/SessionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport roomService from '../../../../services/roomService';\nimport moment from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { styles } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SessionForm({\n  rooms,\n  movies\n}) {\n  _s();\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [buttonHover, setButtonHover] = useState(false);\n  const handleRoomChange = async selectedOption => {\n    setSelectedRoom(selectedOption);\n    const data = await roomService.getTimeSlotsByRoomId(selectedOption.value);\n    setTimeSlots(data);\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleTimeSlotChange = selectedOption => {\n    setSelectedTimeSlot(selectedOption);\n  };\n  const handleMovieChange = selectedOption => {\n    setSelectedMovie(selectedOption);\n  };\n  const handleCreateSession = e => {\n    e.preventDefault();\n    const sessionData = {\n      room: selectedRoom,\n      date: selectedDate,\n      timeSlot: selectedTimeSlot,\n      movie: selectedMovie\n    };\n    console.log(sessionData);\n    // Here you can send the sessionData to your API or handle it as needed\n  };\n  const roomOptions = rooms.map(room => ({\n    value: room.id,\n    label: room.name\n  }));\n  const timeSlotsOptions = timeSlots.map(slot => ({\n    value: slot.id,\n    label: moment.utc(slot.start_time).format('HH:mm') + \" - \" + moment.utc(slot.end_time).format('HH:mm')\n  }));\n  const moviesOptions = movies.map(movie => ({\n    value: movie.id,\n    label: movie.title\n  }));\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCreateSession,\n    style: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.selectContainer,\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: handleDateChange,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.selectContainer,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        options: roomOptions,\n        onChange: handleRoomChange,\n        value: selectedRoom,\n        styles: {\n          container: provided => ({\n            ...provided,\n            ...styles.input\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.selectContainer,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        options: timeSlotsOptions,\n        onChange: handleTimeSlotChange,\n        value: selectedTimeSlot,\n        styles: {\n          container: provided => ({\n            ...provided,\n            ...styles.input\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.selectContainer,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        options: moviesOptions,\n        onChange: handleMovieChange,\n        value: selectedMovie,\n        styles: {\n          container: provided => ({\n            ...provided,\n            ...styles.input\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: buttonHover ? {\n        ...styles.button,\n        ...styles.buttonHover\n      } : styles.button,\n      onMouseEnter: () => setButtonHover(true),\n      onMouseLeave: () => setButtonHover(false),\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(SessionForm, \"k+JjpDz/g7KD802BfsU79x/jgNc=\");\n_c = SessionForm;\nexport default SessionForm;\nvar _c;\n$RefreshReg$(_c, \"SessionForm\");","map":{"version":3,"names":["React","useState","Select","roomService","moment","DatePicker","styles","jsxDEV","_jsxDEV","SessionForm","rooms","movies","_s","selectedRoom","setSelectedRoom","selectedDate","setSelectedDate","Date","selectedTimeSlot","setSelectedTimeSlot","selectedMovie","setSelectedMovie","timeSlots","setTimeSlots","buttonHover","setButtonHover","handleRoomChange","selectedOption","data","getTimeSlotsByRoomId","value","handleDateChange","date","handleTimeSlotChange","handleMovieChange","handleCreateSession","e","preventDefault","sessionData","room","timeSlot","movie","console","log","roomOptions","map","id","label","name","timeSlotsOptions","slot","utc","start_time","format","end_time","moviesOptions","title","onSubmit","style","form","children","selectContainer","selected","onChange","input","fileName","_jsxFileName","lineNumber","columnNumber","options","container","provided","type","button","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/pages/Admin/Session/SessionForm/SessionForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Select from 'react-select';\nimport roomService from '../../../../services/roomService';\nimport moment from 'moment';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { styles } from './styles';\n\nfunction SessionForm({ rooms, movies }) {\n    const [selectedRoom, setSelectedRoom] = useState(null);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [selectedTimeSlot, setSelectedTimeSlot] = useState(null);\n    const [selectedMovie, setSelectedMovie] = useState(null);\n    const [timeSlots, setTimeSlots] = useState([]);\n    const [buttonHover, setButtonHover] = useState(false);\n\n    const handleRoomChange = async (selectedOption) => {\n        setSelectedRoom(selectedOption);\n        const data = await roomService.getTimeSlotsByRoomId(selectedOption.value);\n        setTimeSlots(data);\n    };\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n    const handleTimeSlotChange = (selectedOption) => {\n        setSelectedTimeSlot(selectedOption);\n    };\n\n    const handleMovieChange = (selectedOption) => {\n        setSelectedMovie(selectedOption);\n    };\n\n    const handleCreateSession = (e) => {\n        e.preventDefault();\n        const sessionData = {\n            room: selectedRoom,\n            date: selectedDate,\n            timeSlot: selectedTimeSlot,\n            movie: selectedMovie\n        };\n        console.log(sessionData);\n        // Here you can send the sessionData to your API or handle it as needed\n    };\n\n    const roomOptions = rooms.map(room => ({ value: room.id, label: room.name }));\n    const timeSlotsOptions = timeSlots.map(slot => ({ value: slot.id, label: moment.utc(slot.start_time).format('HH:mm') + \" - \" + moment.utc(slot.end_time).format('HH:mm')}));\n    const moviesOptions = movies.map(movie => ({ value: movie.id, label: movie.title }));\n\n    return (\n        <form onSubmit={handleCreateSession} style={styles.form}>\n            <div style={styles.selectContainer}>\n                <DatePicker \n                    selected={selectedDate} \n                    onChange={handleDateChange} \n                    style={styles.input}\n                />\n            </div>\n            <div style={styles.selectContainer}>\n                <Select \n                    options={roomOptions} \n                    onChange={handleRoomChange} \n                    value={selectedRoom}\n                    styles={{ container: (provided) => ({ ...provided, ...styles.input }) }}\n                />\n            </div>\n            <div style={styles.selectContainer}>\n                <Select \n                    options={timeSlotsOptions} \n                    onChange={handleTimeSlotChange} \n                    value={selectedTimeSlot}\n                    styles={{ container: (provided) => ({ ...provided, ...styles.input }) }}\n                />\n            </div>\n            <div style={styles.selectContainer}>\n                <Select \n                    options={moviesOptions} \n                    onChange={handleMovieChange} \n                    value={selectedMovie}\n                    styles={{ container: (provided) => ({ ...provided, ...styles.input }) }}\n                />\n            </div>\n            <button \n                type=\"submit\" \n                style={buttonHover ? { ...styles.button, ...styles.buttonHover } : styles.button}\n                onMouseEnter={() => setButtonHover(true)}\n                onMouseLeave={() => setButtonHover(false)}\n            >\n                Create\n            </button>\n        </form>\n    );\n}\n\nexport default SessionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}