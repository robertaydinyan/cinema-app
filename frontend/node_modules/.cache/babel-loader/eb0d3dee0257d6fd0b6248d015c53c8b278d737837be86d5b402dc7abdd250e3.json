{"ast":null,"code":"var _jsxFileName = \"/home/robond/Desktop/current_projects/cinema-app/frontend/src/components/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { isAuthenticated } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const isAuthenticatedResult = await isAuthenticated();\n        setAuthenticated(isAuthenticatedResult);\n      } catch (error) {\n        console.error('Error checking authentication:', error);\n        setAuthenticated(false); // Handle error appropriately\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  return authenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/admin/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 39\n  }, this);\n};\n_s(PrivateRoute, \"+nyo0O1WmcKNkwQZH3xRKUoDvQ8=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","isAuthenticated","jsxDEV","_jsxDEV","PrivateRoute","children","_s","authenticated","setAuthenticated","checkAuth","isAuthenticatedResult","error","console","setLoading","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/robond/Desktop/current_projects/cinema-app/frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { isAuthenticated } from '../services/auth';\n\nconst PrivateRoute = ({ children }) => {\n    const [authenticated, setAuthenticated] = useState(false);\n\n    useEffect(() => {\n        const checkAuth = async () => {\n            try {\n                const isAuthenticatedResult = await isAuthenticated();\n                setAuthenticated(isAuthenticatedResult);\n            } catch (error) {\n                console.error('Error checking authentication:', error);\n                setAuthenticated(false); // Handle error appropriately\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        checkAuth();\n    }, []);\n\n    return authenticated ? children : <Navigate to=\"/admin/login\" />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,qBAAqB,GAAG,MAAMT,eAAe,CAAC,CAAC;QACrDO,gBAAgB,CAACE,qBAAqB,CAAC;MAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDH,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;MAC7B,CAAC,SAAS;QACNK,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,aAAa,GAAGF,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACc,EAAE,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpE,CAAC;AAACZ,EAAA,CApBIF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAsBlB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}